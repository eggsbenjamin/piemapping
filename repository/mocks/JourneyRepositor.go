// Code generated by mockery v1.0.0
package mocks

import mock "github.com/stretchr/testify/mock"
import models "github.com/eggsbenjamin/piemapping/models"

// JourneyRepositor is an autogenerated mock type for the JourneyRepositor type
type JourneyRepositor struct {
	mock.Mock
}

// GetByDepLocWithinRange provides a mock function with given fields: _a0, _a1, _a2
func (_m *JourneyRepositor) GetByDepLocWithinRange(_a0 string, _a1 string, _a2 string) ([]*models.Journey, error) {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 []*models.Journey
	if rf, ok := ret.Get(0).(func(string, string, string) []*models.Journey); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Journey)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, string) error); ok {
		r1 = rf(_a0, _a1, _a2)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByDriverAvailability provides a mock function with given fields: _a0
func (_m *JourneyRepositor) GetByDriverAvailability(_a0 string) ([]*models.Journey, error) {
	ret := _m.Called(_a0)

	var r0 []*models.Journey
	if rf, ok := ret.Get(0).(func(string) []*models.Journey); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Journey)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
